{"version":3,"sources":["img/gallTest.jpg","img/M13.jpg","Components/DevSkillCard.js","Components/CardView.js","Components/Gallery.js","Components/WelcomeMat.js","Components/Rotator.js","Components/TopNavigation.js","firebase/config.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DevSkillCard","props","handleClick","e","titleProps","index","newIndex","state","activeIndex","setState","items","map","item","List","Item","key","icon","toString","Icon","name","verticalAlign","Content","className","text","this","Fragment","Accordion","Title","active","onClick","Header","as","title","divided","relaxed","SubSections","Card","textAlign","Sections","Description","fluid","styled","AccordionList","sections","Component","CardView","Segment","id","block","Group","centered","data","GalleryView","color","Meta","secondary","compact","Image","src","galtest","size","rounded","extra","m13","WelcomeMat","to","Container","Rotator","location","useLocation","useTransition","pathname","from","opacity","transform","enter","leave","div","style","path","exact","component","A","B","C","TopNavigation","handleLoginClick","linkDestination","target","updateParent","bind","Menu","fixed","link","href","position","Dropdown","Button","googleAuthProvider","firebase","auth","GoogleAuthProvider","signInWithPopup","bordered","primary","signOut","React","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dd1bdde2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gallTest.ee638f33.jpg\";","module.exports = __webpack_public_path__ + \"static/media/M13.d6eb7c67.jpg\";","import React, { Component } from 'react'\r\nimport {Card,Icon, List, Accordion, Header} from 'semantic-ui-react';\r\n\r\nexport default class DevSkillCard extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = { \r\n            activeIndex: 0\r\n        }\r\n    }\r\n\r\n    SubSections(items){        \r\n        const subSections = items.map((item,index) => \r\n            <List.Item key={item.icon+index.toString()}>\r\n                <List.Icon name={item.icon} verticalAlign=\"middle\" />\r\n                <List.Content>\r\n                    <p className=\"itemText\">{item.text}</p>\r\n                </List.Content>\r\n            </List.Item>\r\n        );        \r\n        return subSections;        \r\n    }\r\n    \r\n    AccordionList(items) {        \r\n        const {activeIndex} = this.state;\r\n        const accordionSections = items.map((item, index) =>\r\n            <React.Fragment>\r\n            <Accordion.Title className=\"accordTitle\" active={activeIndex === index} index={index} onClick={this.handleClick}>\r\n                <Header as=\"h4\">\r\n                <Icon name={item.icon} />\r\n                {item.title}\r\n                </Header>\r\n            </Accordion.Title>\r\n             <Accordion.Content active={activeIndex === index}>  \r\n                <List divided relaxed>                 \r\n                    {this.SubSections(item.items)}\r\n                </List>  \r\n            </Accordion.Content>    \r\n         </React.Fragment>\r\n        );\r\n        return accordionSections;\r\n    }\r\n\r\n    handleClick = (e, titleProps) => {\r\n        const { index } = titleProps\r\n        const { activeIndex } = this.state\r\n        const newIndex = activeIndex === index ? -1 : index;\r\n        this.setState({ activeIndex: newIndex })\r\n      }\r\n    render() {                \r\n        return (        \r\n            <Card className=\"skillsetCard\" >\r\n            <Card.Content>\r\n                <Header as=\"h3\" textAlign=\"center\" >\r\n                    {this.props.Sections.title}\r\n                </Header>\r\n                <Card.Description>\r\n                        <Accordion fluid styled>\r\n                            {this.AccordionList(this.props.Sections.sections)}\r\n                        </Accordion>   \r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n    \r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport DevSkillCard from './DevSkillCard';\r\nimport {Card, Segment, Header} from 'semantic-ui-react';\r\nimport data from '../skillcards.json';\r\n\r\nexport default function CardView(){\r\n  \r\n    return (\r\n        <Segment id=\"mainContainer\" >\r\n            <Header as='h2' textAlign=\"center\" block >Software Development</Header>               \r\n            <Card.Group centered >\r\n                <DevSkillCard Sections={data[0]} />\r\n                <DevSkillCard Sections={data[1]} />\r\n                <DevSkillCard Sections={data[2]} />\r\n            </Card.Group>        \r\n        </Segment>\r\n        \r\n    );\r\n}","import React, { Component } from 'react'\r\nimport {Image, Segment, Header, Card, Icon} from 'semantic-ui-react';\r\nimport galtest from '../img/gallTest.jpg';\r\nimport m13 from '../img/M13.jpg';\r\n\r\nexport default class GalleryView extends Component {\r\n    render() {\r\n        return (  \r\n            \r\n                \r\n            <Card.Group id=\"galleryRoot\" centered >        \r\n            <Card className=\"galleryCard\" color=\"blue\" fluid>\r\n                <Card.Content>\r\n                <Card.Header>\r\n                    <Header as=\"h5\">Orion's Nebula - Messier 42\r\n                    </Header>                    \r\n                </Card.Header>\r\n                <Card.Meta>\r\n                    <span className='date'>09.29.2020</span>\r\n                </Card.Meta>              \r\n                    <Segment  centered secondary compact>\r\n                        {<Image src={galtest} size='massive' rounded centered />}\r\n                    </Segment>\r\n                <Card.Description>\r\n                    The Jewel in the Heart of Orion. One of the most beautiful nebulae in the sky, both visually and photographically.\r\n                </Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                    <Icon name='clock' />\r\n                    50 frames x 35 + 50 frames x 60 @1600 ISO              \r\n                </Card.Content>\r\n            </Card>\r\n            <Card className=\"galleryCard\" fluid>\r\n                <Card.Content>\r\n                <Card.Header>\r\n                    <Header as=\"h5\">The Great Globular Cluster in Hercules - Messier 13\r\n                    </Header>                    \r\n                </Card.Header>\r\n                <Card.Meta>\r\n                    <span className='date'>09.29.2020</span>\r\n                </Card.Meta>              \r\n                    <Segment  centered secondary compact>\r\n                        <Image src={m13} size='massive' rounded centered />                \r\n                    </Segment>\r\n                <Card.Description>\r\n                    The Jewel in the Heart of Orion. One of the most beautiful nebulae in the sky, both visually and photographically.\r\n                </Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                    <Icon name='clock' />\r\n                    50 frames x 35 + 50 frames x 60 @1600 ISO\r\n                </Card.Content>\r\n            </Card>\r\n            </Card.Group>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Header, Segment, Container, Icon} from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function WelcomeMat(){        \r\n    return (  \r\n        <React.Fragment>                       \r\n            <Segment textAlign=\"center\"> \r\n                <Header as=\"h3\">\r\n                    You are not currently logged in!\r\n                </Header>\r\n                <Link to=\"/A\">\r\n                <Icon size=\"large\" name='user outline' />\r\n                </Link>\r\n                \r\n                <br />\r\n                <Container text>\r\n                    To prevent webcrawling bots from scraping my data I've put it behind a layer of authentication. Please login with a google account to view the rest of my site. \r\n                </Container>\r\n            </Segment>         \r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route, useLocation } from 'react-router-dom';\r\nimport CardView from './CardView';\r\nimport Gallery from './Gallery';\r\nimport WelcomeMat from './WelcomeMat';\r\nimport { useTransition, animated } from 'react-spring';\r\nimport './css/Rotator.css';\r\n\r\nexport default function Rotator() {\r\n  const location = useLocation()\r\n  const transitions = useTransition(location, location => location.pathname, {\r\n    from: { opacity: 0, transform: 'translate3d(100%,0,0)' },\r\n    enter: { opacity: 1, transform: 'translate3d(0%,0,0)' },\r\n    leave: { opacity: 0, transform: 'translate3d(-50%,0,0)' },\r\n  })\r\n  return transitions.map(({ item: location, props, key }) => (\r\n    <animated.div id=\"rotatorDiv\" key={key} style={props}>\r\n      <Switch location={location}>\r\n        <Route path=\"/\" exact component={A} />\r\n        <Route path=\"/a\" component={A} />\r\n        <Route path=\"/b\" component={B} />\r\n        <Route path=\"/c\" component={C} />\r\n      </Switch>\r\n    </animated.div>\r\n  ))\r\n}\r\n\r\n\r\nconst A = () => (\r\n  <CardView />\r\n)\r\n\r\nconst B = () => (\r\n  <Gallery />\r\n)\r\n\r\nconst C = () => (\r\n  <WelcomeMat />\r\n)\r\n\r\n","import React from 'react';\r\nimport {Icon, Menu, Dropdown, Button, Header} from 'semantic-ui-react';\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport {\r\n    IfFirebaseAuthed,\r\n    IfFirebaseUnAuthed,\r\n  } from \"@react-firebase/auth\";\r\n\r\nimport '../bootswatch/v4/semantic.lux.min.css';\r\n\r\n\r\nexport default class TopNavigation extends React.Component {           \r\n    \r\n    constructor(props){\r\n      super(props);\r\n      this.handleLoginClick = this.handleLoginClick.bind(this);\r\n    }\r\n    handleLoginClick = (e) => {\r\n      let linkDestination = e.target.id;\r\n      this.props.updateParent(linkDestination);\r\n    }\r\n    \r\n    render(){\r\n      return (\r\n        <Menu fixed=\"top\" size='mini'>\r\n        <Menu.Item>\r\n            <Header> \r\n                Jon M. Sales\r\n            </Header>\r\n        </Menu.Item>\r\n        <Menu.Item id=\"devlink\" link name='Software Developer' href=\"/a\"  active={false} />\r\n        <Menu.Item id=\"aplink\" link name='Astrophotographer'  href=\"/b\"  active={false} />\r\n        <Menu.Menu position='right'>\r\n          <IfFirebaseAuthed>\r\n          <Dropdown item text='My Stuff'>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item href='https://apertura-website.web.app/' target='_blank'>\r\n                <Icon name=\"write\"></Icon>\r\n                Apertura USA Website\r\n              </Dropdown.Item>\r\n              <Dropdown.Item href='https://www.linkedin.com/in/jon-sales-243937b0/' target='_blank'>\r\n              <Icon name=\"linkedin\"></Icon>\r\n                LinkedIn Profile\r\n              </Dropdown.Item>\r\n              <Dropdown.Item href='https://www.astrobin.com/users/TheRealSalino/' target='_blank'>    \r\n              <Icon name=\"chrome\"></Icon>          \r\n                Astrobin Profile\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          </IfFirebaseAuthed>\r\n          <Menu.Item>\r\n            <IfFirebaseUnAuthed>  \r\n            <Button icon color=\"green\" onClick={() => {\r\n                    const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n                    firebase.auth().signInWithPopup(googleAuthProvider);\r\n                }}><span>Login with:</span><Icon bordered name=\"google\"/>\r\n            </Button>\r\n            </IfFirebaseUnAuthed>\r\n            <IfFirebaseAuthed>\r\n            <Button icon primary onClick={() => {                    \r\n                    firebase.auth().signOut();\r\n                }}>\r\n                <span>Logout</span>\r\n            </Button>\r\n            </IfFirebaseAuthed>\r\n            \r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    );\r\n    }\r\n    \r\n}\r\n","\r\n\r\n\r\nconst FirebaseConfig = {\r\n    apiKey: \"AIzaSyD15mVMWb9A4BmNhJeS2Ibep_veXdGglnE\",\r\n    authDomain: \"jonsalescomwebsite.firebaseapp.com\",\r\n    databaseURL: \"https://jonsalescomwebsite.firebaseio.com\",\r\n    projectId: \"jonsalescomwebsite\",\r\n    storageBucket: \"jonsalescomwebsite.appspot.com\",\r\n    messagingSenderId: \"929274938694\",\r\n    appId: \"1:929274938694:web:5d82e08d6a3dd28ac15147\",\r\n    measurementId: \"G-7V4CWT4NEX\"\r\n  };\r\n\r\nexport default FirebaseConfig;","import React from 'react';\n\nimport Rotator from './Components/Rotator';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport TopNavigation from './Components/TopNavigation';\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport {\n  FirebaseAuthProvider\n///  IfFirebaseAuthedAnd\n} from \"@react-firebase/auth\";\n\nimport FirebaseConfig from './firebase/config';\n\n\nfunction App() {\n  return (\n    <FirebaseAuthProvider  firebase={firebase} {...FirebaseConfig} >\n    <div className=\"App\">\n        <TopNavigation />  \n        <Rotator />              \n    </div>\n    </FirebaseAuthProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Rotator from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Rotator />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}